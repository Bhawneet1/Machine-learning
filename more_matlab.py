# -*- coding: utf-8 -*-
"""More Matlab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jc_X8wdJpiKiJZ_KhdmbAEYaGSUbZeUo
"""

import matplotlib.pyplot as plt
import numpy as np
import pandas as pd

plt.style.use('dark_background')

subjects = ['Maths','English','Science','Social Studies','Computer']
marks=[89,90,45,78,99]

plt.bar(subjects,marks)
plt.show()

plt.bar(subjects,marks,color='green')
plt.show()

colors=['red','blue','green','orange','purple']
plt.bar(subjects,marks,color=colors)
plt.show()

colors=['red','blue','green','orange','purple']
plt.bar(subjects,marks,color=colors,width=0.6)
plt.show()
#reduce by 40%

colors=['red','blue','green','orange','purple']
plt.bar(subjects,marks,color=colors,width=0.6,edgecolor='orange')
plt.show()
#give color to border

colors=['red','blue','green','orange','purple']
plt.bar(subjects,marks,color=colors,width=0.6,edgecolor='orange',linewidth=4)
plt.show()
#give width to border-linewidth

colors=['red','blue','green','orange','purple']
plt.bar(subjects,marks,color=colors,width=0.6,edgecolor='orange',linewidth=4,linestyle='--')
plt.show()
#linestyle for border style

plt.barh(subjects,marks,color=colors)
plt.show()
#barh-for horizontal bar

subjects = ['Maths','English','Science','Social Studies','Computer']
marks1=[89,90,45,78,99]
marks2=[78,56,34,90,12]

plt.figure(figsize=(8,8))
plt.bar(subjects,marks1,label='Marks1')
plt.bar(subjects,marks2,label='Marks2')
plt.xlabel('Subjects')
plt.ylabel('Marks')
plt.show()
#in social studies if the marks1<marks2 only one bar out of two is available

subjects_len=np.arange(len(subjects))
width=0.4

plt.figure(figsize=(8,8))
plt.bar(subjects_len,marks1,width=width)
plt.bar(subjects_len+width,marks2,width=width)
plt.xlabel('Subjects')
plt.ylabel('Marks')
plt.show()

plt.figure(figsize=(8,8))
plt.bar(subjects_len,marks1,width=width,color=colors)
plt.bar(subjects_len+width,marks2,width=width,color=colors,alpha=0.5)
plt.xlabel('Subjects')
plt.ylabel('Marks')
plt.show()

df=pd.read_csv('/content/SUPERMARKET.csv')
df.head()

payment_df=pd.DataFrame(df['Payment'].value_counts())
payment_df

colors=['red','blue','green']
plt.bar(payment_df.index,payment_df['Payment'],color=colors)
plt.show()

#histogram
# In histogram graph we have range

marks_50_students =np.random.randint(0,100,(50))
marks_50_students

plt.hist(marks_50_students)
plt.show()

bins=np.arange(0,100,5)

plt.figure(figsize=(6,6))
plt.hist(marks_50_students,bins=bins)
plt.xticks(np.arange(0,100,5))
plt.show()

bins=np.arange(0,100,5)

plt.figure(figsize=(6,6))
plt.hist(marks_50_students,bins=bins,color='orange')
plt.xticks(np.arange(0,100,5))
plt.show()

#horizontal orientation
bins=np.arange(0,100,5)

plt.figure(figsize=(6,6))
plt.hist(marks_50_students,bins=bins,color='orange',orientation='horizontal')
# plt.xticks(np.arange(0,100,5))
plt.yticks(np.arange(0,100,5))#replace x-ticks with yticks for horizontal
plt.show()

bins=np.arange(0,100,5)

plt.figure(figsize=(6,6))
plt.hist(marks_50_students,bins=bins,color='orange',rwidth=0.6)#rwidth for spaces between the bars
plt.xticks(np.arange(0,100,5))
plt.show()

#histtype - 'bar' ,'barstacked','step','stepfilled'
bins=np.arange(0,100,5)

plt.figure(figsize=(6,6))
plt.hist(marks_50_students,bins=bins,color='orange',rwidth=0.6,histtype='bar')
plt.xticks(np.arange(0,100,5))
plt.show()

marks_50_students1 =np.random.randint(0,100,(50))
marks_50_students2 =np.random.randint(0,100,(50))

bins =np.arange(1,100,5)
plt.figure(figsize=(6,6))
plt.hist([marks_50_students1,marks_50_students2],bins=bins,color=['orange','blue'])
plt.xticks(np.arange(0,100,5))
plt.xlabel('Marks')
plt.ylabel('Frequency')
plt.title('MArks ')
plt.show()

#pie plot
classes=['Physics','Chemistry','Maths','Science','SST']
marks=[89,45,78,23,90]

plt.pie(marks,labels=classes)
plt.show()

colors=['red','blue','green','#eee','#faf']
plt.pie(marks,labels=classes,colors=colors)
plt.show()
#

colors=['red','blue','green','#eee','#faf']
plt.pie(marks,labels=classes,colors=colors,autopct='%0.1f%%')#01 means 1 digit after decimal
plt.show()

colors=['red','blue','green','#94f','#faf']
plt.pie(marks,labels=classes,colors=colors,autopct='%0.2f%%')#0.2 means 2 digit after decimal
plt.show()

explode_values=[0.1,0,0,0,0]
plt.pie(marks,labels=classes,colors=colors,autopct='%0.2f%%',explode=explode_values)
plt.show()
#explode sai bahar ko nikal ayega

explode_values=[0.1,0,0,0,0]
plt.pie(marks,labels=classes,colors=colors,autopct='%0.2f%%',explode=explode_values,shadow=True)
plt.show()

explode_values=[0.1,0,0,0,0]
plt.pie(marks,labels=classes,colors=colors,autopct='%0.2f%%',
        explode=explode_values,shadow=True,
        radius=1.6)
plt.show()

textprops={'fontsize':14,'color':'k'}
plt.pie(marks,labels=classes,colors=colors,autopct='%0.1f%%',
        explode=explode_values,radius=1.6,textprops=textprops)
plt.show()

textprops={'fontsize':14,'color':'k'}
wedgeprops={'linewidth':3,'linestyle':'--','edgecolor':'white'}
plt.pie(marks,labels=classes,colors=colors,autopct='%0.1f%%',
        explode=explode_values,radius=1.6,textprops=textprops,wedgeprops=wedgeprops)
plt.show()

textprops={'fontsize':14,'color':'k'}
plt.pie(marks,labels=classes,colors=colors,autopct='%0.1f%%',
        explode=explode_values,radius=1.6,textprops=textprops)
plt.legend()
plt.show()

df=pd.read_csv('/content/SUPERMARKET.csv')

payment_df=pd.DataFrame(df['Payment'].value_counts())
payment_df

plt.pie(payment_df['Payment'],colors=['red','blue','green'],autopct='%0.1f%%')
plt.show()

#subplots
study_hours=[2,3,4,4,5,6,7,7,8,9,9,10,11,11,12]
marks=[6,10,15,20,34,44,55,60,55,67,70,80,90,99,100]

plt.scatter(study_hours,marks)
plt.show()

plt.plot(study_hours,marks,'r--')
plt.show()

plt.hist(marks)

plt.figure(figsize=(8,8))
plt.plot(study_hours,marks,'r--')
plt.plot(s)

plt.figure(figsize=(8,8))
plt.subplot(2,2,1)
plt.scatter(study_hours,marks)
plt.subplot(2,2,2)
plt.plot(study_hours,marks,'r--')
plt.subplot(2,2,3)
plt.plot(study_hours,marks,'g*')
plt.plot(study_hours,marks,'w--')
plt.subplot(2,2,4)
plt.hist(marks)
plt.show()

# #to save image
# plt.savefig('/content/subplot.png',quality=100,facecolor = 'k')

# to read images
import matplotlib.image as mpimg
img=mpimg.imread('/content/Youtube.jpg')
plt.imshow(img)
#read only rgb

import cv2 #computer vision

imgcv2=cv2.imread('/content/Youtube.jpg')
plt.imshow(imgcv2)
plt.show()
#not show in correct image as it show image in bgi convert to rgb

imgcv2=cv2.cvtColor(imgcv2,cv2.COLOR_BGR2RGB)
plt.imshow(imgcv2)

plt.imshow(img,aspect=1)
plt.show()
#aspect height to width ratio

plt.imshow(img,aspect=0.5)
plt.show()

img1=mpimg.imread('/content/Youtube.jpg')
img2=mpimg.imread('/content/12.jpg')
img3=mpimg.imread('/content/34.jpg')
img4=mpimg.imread('/content/waterbody.background.jpg')

plt.figure(figsize=(8,8))
plt.subplot(2,2,1)
plt.imshow(img1)
plt.subplot(2,2,2)
plt.imshow(img2)
plt.subplot(2,2,3)
plt.imshow(img3)
plt.subplot(2,2,4)
plt.imshow(img4)
plt.show()

plt.imshow(img,cmap='gray')
plt.colorbar()
plt.show()